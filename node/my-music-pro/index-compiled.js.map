{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AAEA,MAAM,OAAO,QAAQ,MAAR,CAAP;AACN,MAAM,MAAM,QAAQ,KAAR,CAAN;AACN,MAAM,SAAS,QAAQ,UAAR,CAAT;;AAEN,MAAM,SAAS,QAAQ,iBAAR,CAAT;AACN,MAAM,cAAc,QAAQ,uBAAR,CAAd;AACN,MAAM,aAAa,QAAQ,sBAAR,CAAb;;;;;;;;;;;AAWN,MAAM,SAAS,KAAK,YAAL,CAAkB,CAAC,GAAD,EAAM,GAAN,KAAc;;;;;AAK7C,MAAI,KAAJ,GAAY,IAAI,KAAJ,CAAU,IAAI,GAAJ,EAAS,IAAnB,EAAyB,KAAzB;;;AALiC,QAS7C,CAAO,GAAP;;;AAT6C,aAY7C,CAAY,GAAZ,EAAiB,GAAjB,EAAsB,YAAY;;AAEhC,eAAW,GAAX,EAAgB,YAAY;;;;;AAK1B,aAAO,GAAP,EAAY,GAAZ,EAL0B;KAAZ,CAAhB,CAFgC;GAAZ,CAAtB,CAZ6C;CAAd,CAA3B;;AAyBN,OAAO,MAAP,CAAc,IAAd,EAAoB,WAApB,EAAiC,YAAY;AAC3C,UAAQ,GAAR,CAAY,kCAAZ,EAD2C;CAAZ,CAAjC","file":"index-compiled.js","sourcesContent":["\"use strict\";\r\n\r\nconst http = require('http');\r\nconst url = require('url');\r\nconst router = require('./router');\r\n\r\nconst render = require('./common/render');\r\nconst staticServe = require('./common/static-serve');\r\nconst bodyParser = require('./common/body-parser');\r\n\r\n/*\r\n * 一般来说，对于每一个请求来说，他们有一些公共的需求，\r\n * 而这些公共的需求，就是常用的：获取get请求参数，获取post请求参数\r\n *\r\n * 经过我们的封装完毕之后：\r\n *  我们想通过  req.query 来获取get请求参数对象\r\n *  通过 req.body  获取post请求提交的请求体参数对象\r\n * */\r\n\r\nconst server = http.createServer((req, res) => {\r\n\r\n  // 进入 router 方法之前，给request对象挂载一些东西\r\n\r\n  // 直接给request对象挂载一个query属性\r\n  req.query = url.parse(req.url, true).query;\r\n\r\n\r\n  // 给res对象挂载一个render方法，参数为：模板的名称，要注入的数据\r\n  render(res);\r\n\r\n  // 优先处理静态资源，如果没有匹配到静态资源，那就处理自己的业务\r\n  staticServe(req, res, function () {\r\n    // 在 request 挂载一个 req.body\r\n    bodyParser(req, function () {\r\n      // 正式进入自己的路由请求处理判断之前\r\n      // 我们给req 扩充了一个 query、body\r\n      // 给 res 对象 扩充了一个 render\r\n\r\n      router(req, res);\r\n\r\n    });\r\n  });\r\n});\r\n\r\nserver.listen(3000, '127.0.0.1', function () {\r\n  console.log('server is listening ar port 3000');\r\n});\r\n"]}