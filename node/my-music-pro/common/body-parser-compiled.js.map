{"version":3,"sources":["body-parser.js"],"names":[],"mappings":"AAAA;;AAEA,MAAM,UAAU,QAAQ,aAAR,CAAV;;AAEN,OAAO,OAAP,GAAiB,UAAU,GAAV,EAAe,IAAf,EAAqB;;;;AAIpC,MAAI,oBAAoB,IAAI,OAAJ,EAAa;AACnC,QAAI,OAAO,EAAP,CAD+B;AAEnC,QAAI,EAAJ,CAAO,MAAP,EAAe,UAAU,KAAV,EAAiB;AAC9B,cAAQ,KAAR,CAD8B;KAAjB,CAAf,CAFmC;;AAMnC,QAAI,EAAJ,CAAO,KAAP,EAAc,YAAY;AACxB,UAAI,IAAJ,GAAW,QAAQ,KAAR,CAAc,IAAd,CAAX,CADwB;AAExB,aAFwB;KAAZ,CAAd,CANmC;GAArC,MAUO;;AAEL,QAAI,IAAJ,GAAW,EAAX,CAFK;AAGL,WAHK;GAVP;CAJe","file":"body-parser-compiled.js","sourcesContent":["\"use strict\";\r\n\r\nconst qstring = require('querystring');\r\n\r\nmodule.exports = function (req, next) {\r\n  // 当请求进来之后，先看看有没有请求体，如果有，动态的解析出来，解析完后挂载到req对象上\r\n  // 如果没有，继续向后执行\r\n  // 如果请求行中有 content-length ，表示是通过post方式提交的表单\r\n  if ('content-length' in req.headers) {\r\n    let data = '';\r\n    req.on('data', function (chunk) {\r\n      data += chunk;\r\n    });\r\n\r\n    req.on('end', function () {\r\n      req.body = qstring.parse(data);\r\n      next();\r\n    });\r\n  } else {\r\n    // 如果不是post请求，那么也给req挂载一个body空对象，防止后面使用的时候出错\r\n    req.body = {};\r\n    next();\r\n  }\r\n};\r\n"]}