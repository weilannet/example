{"version":3,"sources":["router.js"],"names":[],"mappings":"AAAA;;AAEA,MAAM,KAAK,QAAQ,IAAR,CAAL;AACN,MAAM,OAAO,QAAQ,MAAR,CAAP;AACN,MAAM,MAAM,QAAQ,KAAR,CAAN;AACN,MAAM,UAAU,QAAQ,aAAR,CAAV;AACN,MAAM,IAAI,QAAQ,YAAR,CAAJ;AACN,MAAM,UAAU,QAAQ,WAAR,CAAV;;;AAGN,MAAM,eAAe,uBAAf;AACN,MAAM,aAAa,qBAAb;;AAEN,OAAO,OAAP,GAAiB,UAAU,GAAV,EAAe,GAAf,EAAoB;;AAEnC,MAAI,SAAS,IAAI,KAAJ,CAAU,IAAI,GAAJ,CAAnB,CAF+B;;AAInC,MAAI,WAAW,OAAO,QAAP,CAJoB;;AAMnC,MAAI,SAAS,IAAI,MAAJ,CANsB;;AAQnC,MAAI,aAAa,GAAb,EAAkB;AACpB,YAAQ,SAAR,CAAkB,GAAlB,EAAuB,GAAvB,EADoB;GAAtB,MAEO,IAAI,aAAa,UAAb,EAAyB;;AAElC,YAAQ,YAAR,CAAqB,GAArB,EAA0B,GAA1B,EAFkC;GAA7B,MAGA,IAAI,WAAW,KAAX,IAAoB,aAAa,MAAb,EAAqB;AAClD,YAAQ,OAAR,CAAgB,GAAhB,EAAqB,GAArB,EADkD;GAA7C,MAEA,IAAI,WAAW,MAAX,IAAqB,aAAa,MAAb,EAAqB;AACnD,YAAQ,KAAR,CAAc,GAAd,EAAmB,GAAnB,EADmD;GAA9C,MAEA,IAAI,WAAW,KAAX,IAAoB,aAAa,IAAb,CAAkB,QAAlB,CAApB,EAAiD;;;AAG1D,QAAI,MAAJ,GAAa,EAAb,CAH0D;AAI1D,QAAI,MAAJ,CAAW,GAAX,GAAiB,SAAS,KAAT,CAAe,YAAf,EAA6B,CAA7B,CAAjB,CAJ0D;AAK1D,YAAQ,QAAR,CAAiB,GAAjB,EAAqB,GAArB,EAL0D;GAArD,MAMA,IAAI,WAAW,KAAX,IAAoB,WAAW,IAAX,CAAgB,QAAhB,CAApB,EAA+C;AACxD,QAAI,MAAJ,GAAa,EAAb,CADwD;AAExD,QAAI,MAAJ,CAAW,GAAX,GAAiB,SAAS,KAAT,CAAe,UAAf,EAA2B,CAA3B,CAAjB,CAFwD;AAGxD,YAAQ,QAAR,CAAiB,GAAjB,EAAqB,GAArB,EAHwD;GAAnD,MAIA,IAAI,WAAW,MAAX,IAAqB,WAAW,IAAX,CAAgB,QAAhB,CAArB,EAAgD;AACzD,QAAI,MAAJ,GAAa,EAAb,CADyD;AAEzD,QAAI,MAAJ,CAAW,GAAX,GAAiB,SAAS,KAAT,CAAe,UAAf,EAA2B,CAA3B,CAAjB,CAFyD;AAGzD,YAAQ,MAAR,CAAe,GAAf,EAAmB,GAAnB,EAHyD;GAApD;CA3BQ","file":"router-compiled.js","sourcesContent":["\"use strict\";\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst url = require('url');\r\nconst qstring = require('querystring');\r\nconst _ = require('underscore');\r\nconst handler = require('./handler');\r\n\r\n// 用来匹配删除链接的url\r\nconst regex_remove = /^\\/remove\\/(\\d{1,6})$/;\r\nconst regex_edit = /^\\/edit\\/(\\d{1,6})$/;\r\n\r\nmodule.exports = function (req, res) {\r\n\r\n  let urlObj = url.parse(req.url);\r\n\r\n  let pathname = urlObj.pathname;\r\n\r\n  let method = req.method;\r\n\r\n  if (pathname === '/') {\r\n    handler.showIndex(req, res);\r\n  } else if (pathname === '/getJson') {\r\n       \r\n    handler.getMusicList(req, res);\r\n  } else if (method === 'GET' && pathname === '/add') {\r\n    handler.showAdd(req, res);\r\n  } else if (method === 'POST' && pathname === '/add') {\r\n    handler.doAdd(req, res);\r\n  } else if (method === 'GET' && regex_remove.test(pathname)) {\r\n    // 统一规定：后面从url路径中，取正则匹配的参数\r\n    // req.params.mid\r\n    req.params = {};\r\n    req.params.mid = pathname.match(regex_remove)[1];\r\n    handler.doRemove(req,res);\r\n  } else if (method === 'GET' && regex_edit.test(pathname)) {\r\n    req.params = {};\r\n    req.params.mid = pathname.match(regex_edit)[1];\r\n    handler.showEdit(req,res);\r\n  } else if (method === 'POST' && regex_edit.test(pathname)) {\r\n    req.params = {};\r\n    req.params.mid = pathname.match(regex_edit)[1];\r\n    handler.doEdit(req,res);\r\n  }\r\n};\r\n\r\n"]}